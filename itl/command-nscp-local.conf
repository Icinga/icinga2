/******************************************************************************
 * Icinga 2                                                                   *
 * Copyright (C) 2012-2016 Icinga Development Team (https://www.icinga.org/)  *
 *                                                                            *
 * This program is free software; you can redistribute it and/or              *
 * modify it under the terms of the GNU General Public License                *
 * as published by the Free Software Foundation; either version 2             *
 * of the License, or (at your option) any later version.                     *
 *                                                                            *
 * This program is distributed in the hope that it will be useful,            *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of             *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *
 * GNU General Public License for more details.                               *
 *                                                                            *
 * You should have received a copy of the GNU General Public License          *
 * along with this program; if not, write to the Free Software Foundation     *
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.             *
 ******************************************************************************/

if (!globals.contains("NscpPath")) {
	NscpPath = dirname(msi_get_component_path("{5C45463A-4AE9-4325-96DB-6E239C034F93}"))
}

object CheckCommand "nscp-local" {
	import  "plugin-check-command"

	command = [ NscpPath + "\\nscp.exe", "client" ]

	arguments = {
		"--log" = "$nscp_log_level$"
		"--load-all" = { set_if ="$nscp_load_all$" }
		"-q" = {
			value = "$nscp_query$"
			required = true
		}
		"-b" = {
			set_if = "$nscp_boot$"
		}
		"-a" = {
			value = "$nscp_arguments$"
			skip_key = true
		}
	}

	vars.nscp_log_level = "critical"
	vars.nscp_load_all = true
	vars.nscp_boot = true
}

object CheckCommand "nscp-local-cpu" {
	import  "nscp-local"

	vars.nscp_query = "check_cpu"
}

object CheckCommand "nscp-local-memory" {
	import  "nscp-local"

	vars.nscp_query = "check_memory"
}

object CheckCommand "nscp-local-os-version" {
	import  "nscp-local"

	vars.nscp_query = "check_os_version"
}

object CheckCommand "nscp-local-pagefile" {
	import  "nscp-local"

	vars.nscp_query = "check_pagefile"
}

object CheckCommand "nscp-local-process" {
	import  "nscp-local"

	vars.nscp_query = "check_process"
}

object CheckCommand "nscp-local-service" {
	import  "nscp-local"

	vars.nscp_query = "check_service"
}

object CheckCommand "nscp-local-uptime" {
	import  "nscp-local"

	vars.nscp_query = "check_uptime"
}

object CheckCommand "nscp-local-version" {
	import  "nscp-local"

	vars.nscp_query = "check_version"
}

object CheckCommand "nscp-local-disk" {
	import "nscp-local"

	vars.nscp_query = "check_drivesize"
}

object CheckCommand "nscp-local-counter" {
	import "nscp-local"

	vars.nscp_query = "check_pdh"
}
