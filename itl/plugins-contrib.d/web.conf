/******************************************************************************
 * Icinga 2                                                                   *
 * Copyright (C) 2012-2016 Icinga Development Team (https://www.icinga.org/)  *
 *                                                                            *
 * This program is free software; you can redistribute it and/or              *
 * modify it under the terms of the GNU General Public License                *
 * as published by the Free Software Foundation; either version 2             *
 * of the License, or (at your option) any later version.                     *
 *                                                                            *
 * This program is distributed in the hope that it will be useful,            *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of             *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *
 * GNU General Public License for more details.                               *
 *                                                                            *
 * You should have received a copy of the GNU General Public License          *
 * along with this program; if not, write to the Free Software Foundation     *
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.             *
 ******************************************************************************/

object CheckCommand "webinject" {
	import "plugin-check-command"

	command = [ PluginContribDir + "/check_webinject" ]

	arguments = {
		"-c" = {
			value = "$webinject_config_file$"
			description = "There is a configuration file named 'config.xml' that is used to store configuration settings for your project. You can use this to specify which test case files to run and to set some constants and settings to be used by WebInject."
		}

		"-o" = {
			value = "$webinject_output$"
			description = "This option is followed by a directory name or a prefix to prepended to the output files. This is used to specify the location for writing output files (http.log, results.html, and results.xml). If a directory name is supplied (use either an absolute or relative path and make sure to add the trailing slash), all output files are written to this directory. If the trailing slash is ommitted, it is assumed to a prefix and this will be prepended to the output files. You may also use a combination of a directory and prefix."
		}

		"-n" = {
			set_if = "$webinject_no_output$"
			description = "Suppresses all output to STDOUT except the results summary."
		}

		"-t" = {
			value = "$webinject_timeout$"
			description = "The value [given in seconds] will be compared to the global time elapsed to run all the tests. If the tests have all been successful, but have taken more time than the 'globaltimeout' value, a warning message is sent back to Icinga."
		}

		"-r" = {
			value = "$webinject_report_type$"
			description = "This setting is used to enable output formatting that is compatible for use with specific external programs. The available values you can set this to are: nagios, mrtg, external and standard"
		}

		"-s" = {
			value = "$webinject_key_value$"
			description = "key=value"
		}

		"testcase_file" = {
			value = "$webinject_testcase_file$"
			description = "When you launch WebInject in console mode, you can optionally supply an argument for a testcase file to run. It will look for this file in the directory that webinject.pl resides in. If no filename is passed from the command line, it will look in config.xml for testcasefile declarations. If no files are specified, it will look for a default file named 'testcases.xml' in the current [webinject] directory. If none of these are found, the engine will stop and give you an error."
			skip_key = true
			order = 1
		}
	}
}

object CheckCommand "jmx4perl" {
		import "plugin-check-command"

		command = [ PluginContribDir + "/check_jmx4perl" ]

		arguments = {
				"-u" = {
						value = "$jmx4perl_url$"
						description = "URL to agent web application (e.g. http://server:8080/jolokia/)"
				}
				"--product" = {
						value = "$jmx4perl_product$"
						description = "Name of app server product (e.g. jboss)"
				}
				"--alias" = {
						value = "$jmx4perl_alias$"
						description = "Alias name for attribute (e.g. MEMORY_HEAP_USED)"
				}
				"-m" = {
						value = "$jmx4perl_mbean$"
						description = "MBean name (e.g. java.lang:type=Memory)"
				}
				"-a" = {
						value = "$jmx4perl_attribute$"
						description = "Attribute name (e.g. HeapMemoryUsage)"
				}
				"-o" = {
						value = "$jmx4perl_operation$"
						description = "Operation to execute"
				}
				"--value" = {
						value = "$jmx4perl_value$"
						description = "Shortcut for specifying mbean/attribute/path. Slashes within names must be escaped with backslash"
				}
				"--delta" = {
						value = "$jmx4perl_delta$"
						description = "Switches on incremental mode. Optional argument are seconds used for normalizing."
				}
				"-p" = {
						value = "$jmx4perl_path$"
						description = "Inner path for extracting a single value from a complex attribute or return value (e.g. used)"
				}
				"--target" = {
						value = "$jmx4perl_target$"
						description = "JSR-160 Service URL specifing the target server"
				}
				"--target-user" = {
						value = "$jmx4perl_target_user$"
						description = "Username to use for JSR-160 connection"
				}
				"--target-password" = {
						value = "$jmx4perl_target_password$"
						description = "Password to use for JSR-160 connection"
				}
				"--proxy" = {
						value = "$jmx4perl_proxy$"
						description = "Proxy to use"
				}
				"--user" = {
						value = "$jmx4perl_user$"
						description = "User for HTTP authentication"
				}
				"--password" = {
						value = "$jmx4perl_password$"
						description = "Password for HTTP authentication"
				}
				"-n" = {
						value = "$jmx4perl_name$"
						description = "Name to use for output. Optional, by default a standard value based on the MBean and attribute will be used"
				}
				"--method" = {
						value = "$jmx4perl_method$"
						description = "HTTP method to use. Either get or post"
				}
				"-b" = {
						value = "$jmx4perl_base$"
						description = "Base name, which when given, interprets critical and warning values as relative in the range 0 .. 100%. Must be given in the form mbean/attribute/path"
				}
				"--base-mbean" = {
						value = "$jmx4perl_base_mbean$"
						description = "Base MBean name, interprets critical and warning values as relative in the range 0 .. 100%. Requires a base-attribute, too"
				}
				"--base-attribute" = {
						value = "$jmx4perl_base_attribute$"
						description = "Base attribute for a relative check. Used together with base-mbean"
				}
				"--base-path" = {
						value = "$jmx4perl_base_path$"
						description = "Base path for relative checks, where this path is used on the base attribute's value"
				}
				"--unit" = {
						value = "$jmx4perl_unit$"
						description = "Unit of measurement of the data retreived. Recognized values are [B|KB|MN|GB|TB] for memory values and [us|ms|s|m|h|d] for time values"
				}
				"--null" = {
						value = "$jmx4perl_null$"
						description = "Value which should be used in case of a null return value of an operation or attribute. Is null by default"
				}
				"--string" = {
						set_if = "$jmx4perl_string$"
						description = "Force string comparison for critical and warning checks"
				}
				"--numeric" = {
						set_if = "$jmx4perl_numeric$"
						description = "Force numeric comparison for critical and warning checks"
				}
				"-c" = {
						value = "$jmx4perl_critical$"
						description = "Critical threshold for value"
				}
				"-w" = {
						value = "$jmx4perl_warning$"
						description = "Warning threshold for value"
				}
				"-l" = {
						value = "$jmx4perl_label$"
						description = "Label to be used for printing out the result of the check. Placeholders can be used."
				}
				"--perfdata" = {
						value = "$jmx4perl_perfdata$"
						description = "Whether performance data should be omitted, which are included by default."
				}
				"--unknown-is-critical" = {
						set_if = "$jmx4perl_unknown_is_critical$"
						description = "Map UNKNOWN errors to errors with a CRITICAL status"
				}
				"-t" = {
						value = "$jmx4perl_timeout$"
						description = "Seconds before plugin times out (default: 15)"
				}
				"--config" = {
						value = "$jmx4perl_config$"
						description = "Path to configuration file."
				}
				"--server" = {
						value = "$jmx4perl_server$"
						description = "Symbolic name of server url to use, which needs to be configured in the configuration file."
				}
				"--check" = {
						value = "$jmx4perl_check$"
						description = "Name of a check configuration as defined in the configuration file, use array if you need arguments."
						order = 1
						repeat_key = false
				}
		}

		vars.jmx4perl_url = "http://$address$:8080/jolokia"
		vars.jmx4perl_string = false
		vars.jmx4perl_numeric = false
		vars.jmx4perl_unknown_is_critical = false
}

object CheckCommand "squid" {
	import "plugin-check-command"
	import "ipv4-or-ipv6"

	command = [ PluginContribDir + "/check_squid" ]

	arguments = {
		"--host" = {
			value = "$squid_hostname$"
			description = "Name of the proxy to check (default: localhost)"
		}
		"--data" = {
			value = "$squid_data$"
			description = "Optional data to fetch (default: Connections)    available data : Connections Cache Resources Memory FileDescriptors"
		}
		"--port" = {
			value = "$squid_port$"
			description = "Optional port number (default: 3128)"
		}
		"--user" = {
			value = "$squid_user$"
			description = "WWW user"
		}
		"--password" = {
			value = "$squid_password$"
			description = "WWW password"
		}
		"--warning" = {
			value = "$squid_warning$"
			description = "Warning threshold. See http://nagiosplug.sourceforge.net/developer-guidelines.html#THRESHOLDFORMAT for the threshold format."
		}
		"--critical" = {
			value = "$squid_critical$"
			description = "Critical threshold. See http://nagiosplug.sourceforge.net/developer-guidelines.html#THRESHOLDFORMAT for the threshold format."
		}
		"--squidclient" = {
			value = "$squid_client$"
			description = "Path of squidclient (default: /usr/bin/squidclient)"
		}
		"--timeout" = {
			value = "$squid_timeout$"
			description = "Seconds before plugin times out (default: 15)"
		}
	}

	vars.squid_hostname = "$check_address$"
	vars.squid_client = "/usr/bin/squidclient"
}

object CheckCommand "nginx_status" {
		import "plugin-check-command"
		import "ipv4-or-ipv6"

		command = [ PluginContribDir + "/check_nginx_status.pl" ]

		arguments = {
				"--hostname" = {
						value = "$nginx_status_host_address$"
						description = "name or IP address of host to check"
				}
				"--port" = {
						value = "$nginx_status_port$"
						description = "the http port"
				}
				"--url" = {
						value = "$nginx_status_url$"
						description = "Specific URL to use, instead of the default 'http://<nginx_status_hostname>/nginx_status'"
				}
				"--servername" = {
						value = "$nginx_status_servername$"
						description = "ServerName, use it if you specified an IP in -H to match the good Virtualhost in your target"
				}
				"--ssl" = {
						set_if = "$nginx_status_ssl$"
						description = "Wether we should use HTTPS instead of HTTP"
				}
				"--disable-sslverifyhostname" = {
						set_if = "$nginx_status_disable_sslverify$"
						description = "Disable SSL hostname verification"
				}
				"--user" = {
						value = "$nginx_status_user$"
						description = "Username for basic auth"
				}
				"--pass" = {
						value = "$nginx_status_pass$"
						description = "Password for basic auth"
				}
				"--realm" = {
						value = "$nginx_status_realm$"
						description = "Realm for basic auth"
				}
				"--maxreach" = {
						value = "$nginx_status_maxreach$"
						description = "Number of max processes reached (since last check) that should trigger an alert"
				}
				"--timeout" = {
						value = "$nginx_status_timeout$"
						description = "timeout in seconds"
				}
				"--warn" = {
						value = "$nginx_status_warn$"
						description = "number of active connections, ReqPerSec or ConnPerSec that will cause a WARNING"
				}
				"--critical" = {
						value = "$nginx_status_critical$"
						description = "number of active connections, ReqPerSec or ConnPerSec that will cause a CRITICAL"
				}
		}

		vars.nginx_status_host_address = "$check_address$"
		vars.nginx_status_ssl = false
		vars.nginx_status_disable_sslverify = false
		vars.nginx_status_warn = "10000,100,200"
		vars.nginx_status_critical = "20000,200,300"
		vars.nginx_status_timeout = 15
}
