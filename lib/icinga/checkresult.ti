/******************************************************************************
 * Icinga 2                                                                   *
 * Copyright (C) 2012-2016 Icinga Development Team (https://www.icinga.org/)  *
 *                                                                            *
 * This program is free software; you can redistribute it and/or              *
 * modify it under the terms of the GNU General Public License                *
 * as published by the Free Software Foundation; either version 2             *
 * of the License, or (at your option) any later version.                     *
 *                                                                            *
 * This program is distributed in the hope that it will be useful,            *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of             *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *
 * GNU General Public License for more details.                               *
 *                                                                            *
 * You should have received a copy of the GNU General Public License          *
 * along with this program; if not, write to the Free Software Foundation     *
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.             *
 ******************************************************************************/

library icinga;

namespace icinga
{

code {{{
/**
 * The state of a host.
 *
 * @ingroup icinga
 */
enum HostState
{
	HostUp = 0,
	HostDown = 1
};

/**
 * The state of a service.
 *
 * @ingroup icinga
 */
enum ServiceState
{
	ServiceOK = 0,
	ServiceWarning = 1,
	ServiceCritical = 2,
	ServiceUnknown = 3
};

/**
 * The state type of a host or service.
 *
 * @ingroup icinga
 */
enum StateType
{
	StateTypeSoft = 0,
	StateTypeHard = 1
};
}}}

class CheckResult
{
	[state] double schedule_start;
	[state] double schedule_end;
	[state] double execution_start;
	[state] double execution_end;

	[state] Value command;
	[state] int exit_status;

	[state, enum] ServiceState "state";
	[state] String output;
	[state] Array::Ptr performance_data;

	[state] bool active {
		default {{{ return true; }}}
	};

	[state] String check_source;

	[state] Dictionary::Ptr vars_before;
	[state] Dictionary::Ptr vars_after;
};

}
