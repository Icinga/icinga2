/******************************************************************************
 * Icinga 2                                                                   *
 * Copyright (C) 2012-2017 Icinga Development Team (https://www.icinga.com/)  *
 *                                                                            *
 * This program is free software; you can redistribute it and/or              *
 * modify it under the terms of the GNU General Public License                *
 * as published by the Free Software Foundation; either version 2             *
 * of the License, or (at your option) any later version.                     *
 *                                                                            *
 * This program is distributed in the hope that it will be useful,            *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of             *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *
 * GNU General Public License for more details.                               *
 *                                                                            *
 * You should have received a copy of the GNU General Public License          *
 * along with this program; if not, write to the Free Software Foundation     *
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.             *
 ******************************************************************************/

#include "icinga/customvarobject.hpp"
#include "base/function.hpp"

library icinga;

namespace icinga
{

class TimePeriod : CustomVarObject
{
	[config] String display_name {
		get {{{
			if (m_DisplayName.IsEmpty())
				return GetName();
			else
				return m_DisplayName;
		}}}
	};
	[config] Dictionary::Ptr ranges;
	[config, required] Function::Ptr update;
	[config] bool prefer_includes {
		default {{{ return true; }}}
	};
	[config, required] array(name(TimePeriod)) excludes {
		default {{{ return new Array(); }}}
	};
	[config, required] array(name(TimePeriod)) includes {
		default {{{ return new Array(); }}}
	};
	[state, no_user_modify] Value valid_begin;
	[state, no_user_modify] Value valid_end;
	[state, no_user_modify] Array::Ptr segments;
	[no_storage] bool is_inside {
		get;
	};
};

validator TimePeriod {
	Dictionary ranges {
		String "*";
	};
};

}
